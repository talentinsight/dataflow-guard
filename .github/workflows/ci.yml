name: CI

on:
  push:
    branches: [ main, develop, fix/* ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  python:
    name: Python CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'backend/pyproject.toml'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,connectors]"
    
    - name: Lint with ruff
      run: |
        ruff check dto_api/ dto_cli/ tests/ --output-format=github
        ruff format --check dto_api/ dto_cli/ tests/
    
    - name: Type check with mypy
      run: mypy dto_api/ dto_cli/
    
    - name: Test with pytest
      run: |
        pytest tests/ -v \
          --cov=dto_api \
          --cov=dto_cli \
          --cov-report=xml:coverage.xml \
          --cov-report=term \
          --junit-xml=pytest-results.xml \
          -m "not integration"
    
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: python-coverage
        path: backend/coverage.xml
        retention-days: 30
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: python-test-results
        path: backend/pytest-results.xml
        retention-days: 30

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint with ESLint
      run: npm run lint
    
    - name: Type check with TypeScript
      run: npx tsc --noEmit
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: frontend-build
        path: frontend/.next/
        retention-days: 7

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [python, frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: dfg_test
          POSTGRES_USER: dfg_user
          POSTGRES_PASSWORD: dfg_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: 'backend/pyproject.toml'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,connectors]"
    
    - name: Run integration tests
      env:
        DATABASE_URL: postgresql+psycopg://dfg_user:dfg_password@localhost:5432/dfg_test
      run: |
        alembic upgrade head
        pytest tests/ -v -m "integration" --junit-xml=integration-results.xml
    
    - name: Upload integration test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results
        path: backend/integration-results.xml
        retention-days: 30